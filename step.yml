#
# A couple of useful guides & docs:
#
# - Main Bitrise CLI docs: https://github.com/bitrise-io/bitrise/tree/master/_docs
# - Step Development Guideline: https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
# - Bitrise.yml format spec: https://github.com/bitrise-io/bitrise/blob/master/_docs/bitrise-yml-format-spec.md
# - Bitrise docs: http://devcenter.bitrise.io/
# - Bitrise CLI guides: http://devcenter.bitrise.io/bitrise-cli/

title: |-
  Docker Build & Push
summary: |
  Building and pushing docker images with built-in cache support
description: |
  Enables you to build and optionally push docker images with built-in Bitrise key-value cache support.
  It is possible to customize the docker build command to utilize other cache mechanisms, such as registry-cache.
website: https://github.com/bitrise-steplib/bitrise-step-docker-build-push
source_code_url: https://github.com/bitrise-steplib/bitrise-step-docker-build-push
support_url: https://github.com/bitrise-steplib/bitrise-step-docker-build-push/issues

# If this step should be available only for certain project types
# just uncomment this `project_type_tags` section and include all the
# project types supported by the step. If the step can be used for all
# project types then you can just remove this section.
# If no `project_type_tags` specified (or specified as an empty array)
# that means the step can be used for any project type.
# You can find more information about project type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
#
# project_type_tags:
#   - ios
#   - macos
#   - android
#   - xamarin
#   - react-native
#   - cordova
#   - ionic
#   - flutter

# Type tags are used for categorizing steps, for easier step discovery in Step Libraries.
# You can find more information about type tags in the Step Development Guideline:
# https://github.com/bitrise-io/bitrise/blob/master/_docs/step-development-guideline.md
type_tags:
  - build

# These properties define whether a Step is run in a given Workflow or not.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#setting-conditions-for-running-the-step
#
# is_always_run: false
# is_skippable: false
# run_if: ""

# Use the `deps` property to declare dependencies that you can fetch from an OS dependency manager.
# You can find more information about this in the documentation here:
# https://devcenter.bitrise.io/en/steps-and-workflows/developing-your-own-bitrise-step/developing-a-new-step.html#submodules-and-step-dependencies
#
# deps:
#   brew:
#   - name: cmake
#   apt_get:
#   - name: cmake


toolkit:
  go:
    package_name: github.com/bitrise-steplib/bitrise-step-docker-build-push


inputs:
  - tags:
    opts:
      title: Image tags
      summary: List of tags (full image names) to be applied to the built image
      description: |-
        List of tags (full image names) to be applied to the built image
        
        Add one tag per line. Example: `myregistry.com/myimage:latest`
      is_required: true

  - push: "false"
    opts:
      title: Push docker image
      summary: When set to 'true', the docker image will be pushed
      description: |-
        When set to 'true', the docker image will be pushed.
      value_options:
        - "true"
        - "false"

  - use_bitrise_cache: "false"
    opts:
      title: Use Bitrise key-value cache
      summary: When set to 'true', the docker image will automatically be cached using Bitrise key-value cache
      description: |-
        When set to 'true', the docker image will automatically be cached using Bitrise key-value cache.
        
        The following cache keys will be used:
        - docker-imagename-{{ .OS }}-{{ .Arch }}-{{ .Branch }}-{{ .CommitHash }}
        - docker-imagename-{{ .OS }}-{{ .Arch }}-{{ .Branch }}
        - docker-imagename-{{ .OS }}-{{ .Arch }}
        
        Warning: Do not specify the cache-to and cache-from parameters when using this option.
      value_options:
        - "true"
        - "false"

  - verbose: "false"
    opts:
      title: Verbose logging
      summary: Enable logging additional information for troubleshooting
      is_required: true
      value_options:
        - "true"
        - "false"