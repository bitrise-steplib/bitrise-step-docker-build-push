format_version: "12"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
    # Shared secrets for testing, use a .bitrise.secrets.yml file to define these locally
  - BITRISEIO_CACHE_SERVICE_URL: $BITRISEIO_CACHE_SERVICE_URL
  - CACHE_API_CLIENT_SECRET: $CACHE_API_CLIENT_SECRET

workflows:
  test_simple_build:
    steps:
    - path::./:
        title: Build a simple image - no cache
        inputs:
        - file: tests/Dockerfile.alpine
        - tags: myregistry.com/myimage:simple-build

  test_with_bitrise_cache:
    before_run:
    - _fake_github_envs
    - _generate_api_token
    steps:
    - path::./:
        title: Build image with Bitrise Cache
        inputs:
        - file: tests/Dockerfile.alpine
        - tags: |-
            myregistry.com/myimage:bitrise-cache
            myregistry.com/myimage:$BITRISE_GIT_BRANCH-$BITRISE_GIT_COMMIT
        - use_bitrise_cache: "true"

  test_advanced_build:
    before_run:
    - _fake_github_envs
    steps:
    - path::./:
        title: Build image with Bitrise Cache
        inputs:
        - file: tests/Dockerfile.alpine
        - tags: |-
            myregistry.com/myimage:advanced-build
            myregistry.com/myimage:$BITRISE_GIT_BRANCH-$BITRISE_GIT_COMMIT
        - cache_from: |-
            type=local,src=/tmp/advanced-build
            type=local,src=/tmp/advanced-build-secondary
        - cache_to: |-
            type=local,dest=/tmp/advanced-build,mode=max,compression=zstd
            type=local,dest=/tmp/advanced-build-secondary,mode=max,compression=zstd
        - build_arg: |-
            VERSION=1.0.0
            TEST=kutya
        - extra_options: |-
            --target=build
            --build-arg "ALMA=CICA KUTYA"
            --platform=linux/amd64
            --label=com.example.version=0.0.1-beta

  test_simple_build_with_push:
    before_run:
    - _start_mock_registry
    after_run:
    - _cleanup_mock_registry
    steps:
    - path::./:
        title: Build a simple image - push to local registry
        inputs:
        - file: tests/Dockerfile.alpine
        - push: "true"
        - tags: localhost:5001/myimage:simple-build
        - buildx_host_network: "true"

  _generate_api_token:
    steps:
    - script:
        title: Generate API access token
        description: Generate an expiring API token using $API_CLIENT_SECRET
        inputs:
        - content: |
            #!/bin/env bash
            set -e

            json_response=$(curl --fail -X POST https://auth.services.bitrise.io/auth/realms/bitrise-services/protocol/openid-connect/token -k \
                --data "client_id=bitrise-steps" \
                --data "client_secret=$CACHE_API_CLIENT_SECRET" \
                --data "grant_type=urn:ietf:params:oauth:grant-type:uma-ticket" \
                --data "claim_token=eyJhcHBfaWQiOlsiY2FjaGUtc3RlcHMtdGVzdHMiXSwgIm9yZ19pZCI6WyJ0ZXN0LW9yZy1pZCJdLCAiYWJjc19hY2Nlc3NfZ3JhbnRlZCI6WyJ0cnVlIl19" \
                --data "claim_token_format=urn:ietf:params:oauth:token-type:jwt" \
                --data "audience=bitrise-services")

            auth_token=$(echo $json_response | jq -r .access_token)

            envman add --key BITRISEIO_ABCS_API_URL --value $BITRISEIO_CACHE_SERVICE_URL
            envman add --key BITRISEIO_BITRISE_SERVICES_ACCESS_TOKEN --value $auth_token --sensitive

  _fake_github_envs:
    steps:
    - script:
        title: Fake GitHub envs
        description: Fake GitHub envs
        inputs:
        - content: |
            #!/bin/bash
            set -ex

            envman add --key BITRISE_GIT_BRANCH --value master
            envman add --key BITRISE_GIT_COMMIT --value 1234567890

  _start_mock_registry:
    steps:
    - script:
        title: setup mock registry
        inputs:
        - content: |-
            docker pull registry:latest
            docker run -d -p 5001:5000 --restart always --name registry registry
              docker login localhost:5001 -u test -p test
  _cleanup_mock_registry:
    steps:
    - script:
        is_always_run: true
        title: cleanup mock registry
        inputs:
        - content: |-
            docker stop registry
            docker rm registry
